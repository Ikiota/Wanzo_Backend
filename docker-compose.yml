services:
  # Service API Gateway - Point d'entrée unique
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
    container_name: kiota-api-gateway
    ports:
      - "8000:3000"
    environment:
      - NODE_ENV=production
      - AUTH_SERVICE_URL=http://admin-service:3001
      - ADMIN_SERVICE_URL=http://admin-service:3001
      - ANALYTICS_SERVICE_URL=http://analytics-service:3010
      - ACCOUNTING_SERVICE_URL=http://accounting-service:3003
      - PORTFOLIO_SME_SERVICE_URL=http://portfolio-sme-service:3004
      - PORTFOLIO_INSTITUTION_SERVICE_URL=http://portfolio-institution-service:3005
      - APP_MOBILE_SERVICE_URL=http://app-mobile-service:3006
      - CUSTOMER_SERVICE_URL=http://customer-service:3011
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/api-gateway/.env
    volumes:
      - api-gateway-logs:/app/apps/api-gateway/logs
    depends_on:
      - admin-service
      - accounting-service
      - analytics-service
      - portfolio-sme-service
      - portfolio-institution-service
      - app-mobile-service
      - customer-service
    networks:
      - kiota-network
    restart: unless-stopped

  # Admin Service
  admin-service:
    build:
      context: .
      dockerfile: ./apps/admin-service/Dockerfile
    container_name: kiota-admin-service
    ports:
      - "3001:3001"
      - "9464:9464" # Port Prometheus
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=root123
      - DB_DATABASE=admin-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=admin-service
      - KAFKA_GROUP_ID=admin-service-group
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/admin-service/.env
    volumes:
      - admin-service-logs:/app/apps/admin-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kiota-network
    restart: unless-stopped

  # Accounting Service
  accounting-service:
    build:
      context: .
      dockerfile: ./apps/accounting-service/Dockerfile
    container_name: kiota-accounting-service
    ports:
      - "3003:3003"
      - "9465:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3003
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=root123
      - DB_DATABASE=accounting-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=accounting-service
      - KAFKA_GROUP_ID=accounting-service-group
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/accounting-service/.env
    volumes:
      - accounting-service-logs:/app/apps/accounting-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kiota-network
    restart: unless-stopped

  # Analytics Service
  analytics-service:
    build:
      context: .
      dockerfile: ./apps/analytics-service/Dockerfile
    container_name: kiota-analytics-service
    ports:
      - "3010:3002"
      - "9466:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3002
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=root123
      - DB_DATABASE=analytics-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=analytics-service
      - KAFKA_GROUP_ID=analytics-service-group
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/analytics-service/.env
    volumes:
      - analytics-service-logs:/app/apps/analytics-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kiota-network
    restart: unless-stopped

  # Portfolio SME Service
  portfolio-sme-service:
    build:
      context: .
      dockerfile: ./apps/portfolio-sme-service/Dockerfile
    container_name: kiota-portfolio-sme-service
    ports:
      - "3004:3004"
      - "9467:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3004
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=root123
      - DB_DATABASE=portfolio-sme-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=portfolio-sme-service
      - KAFKA_GROUP_ID=portfolio-sme-service-group
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/portfolio-sme-service/.env
    volumes:
      - portfolio-sme-service-logs:/app/apps/portfolio-sme-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kiota-network
    restart: unless-stopped

  # Portfolio Institution Service
  portfolio-institution-service:
    build:
      context: .
      dockerfile: ./apps/portfolio-institution-service/Dockerfile
    container_name: kiota-portfolio-institution-service
    ports:
      - "3005:3005"
      - "9468:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3005
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=root123
      - DB_DATABASE=portfolio-institution-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=portfolio-institution-service
      - KAFKA_GROUP_ID=portfolio-institution-service-group
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/portfolio-institution-service/.env
    volumes:
      - portfolio-institution-service-logs:/app/apps/portfolio-institution-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kiota-network
    restart: unless-stopped

  # App Mobile Service
  app-mobile-service:
    build:
      context: .
      dockerfile: ./apps/app_mobile_service/Dockerfile
    container_name: kiota-app-mobile-service
    ports:
      - "3006:3006"
      - "9469:9464" # Port Prometheus (mapping différent)
    environment:
      - NODE_ENV=production
      - PORT=3006
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=root123
      - DB_DATABASE=app_mobile_service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=app-mobile-service
      - KAFKA_GROUP_ID=app-mobile-service-group
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/app_mobile_service/.env
    volumes:
      - app-mobile-service-logs:/app/apps/app_mobile_service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kiota-network
    restart: unless-stopped

  # Adha AI Service
  adha-ai-service:
    build:
      context: .
      dockerfile: ./apps/Adha-ai-service/Dockerfile
    container_name: kiota-adha-ai-service
    ports:
      - "8002:8002"
      - "9470:9464" # Port Prometheus (mapping différent)
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY}
      - CHROMADB_PATH=${CHROMADB_PATH}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT}
      - KNOWLEDGE_BASE_PATH=${KNOWLEDGE_BASE_PATH}
      - DJANGO_SETTINGS_MODULE=comptable_ia_api.settings
      - PORT=8002
      - KAFKA_BROKER_URL=kafka:29092
      - PROMETHEUS_PORT=9464
    env_file:
      - ./apps/Adha-ai-service/.env
    volumes:
      - ./apps/Adha-ai-service/data:/app/data
    depends_on:
      - kafka
      - prometheus
      - grafana
    networks:
      - kiota-network
    restart: unless-stopped

  # Customer Service
  customer-service:
    build:
      context: .
      dockerfile: ./apps/customer-service/Dockerfile
    container_name: kiota-customer-service
    ports:
      - "3011:3011"
      - "9471:9464"
    environment:
      - NODE_ENV=production
      - PORT=3011
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=root123
      - DB_DATABASE=customer-service
      - KAFKA_BROKERS=kafka:29092
      - KAFKA_CLIENT_ID=customer-service
      - KAFKA_GROUP_ID=customer-service-group
      - PROMETHEUS_PORT=9464
    volumes:
      - customer-service-logs:/app/apps/customer-service/logs
    depends_on:
      - postgres
      - kafka
    networks:
      - kiota-network
    restart: unless-stopped
    env_file:
      - ./apps/customer-service/.env

volumes:
  api-gateway-logs:
  admin-service-logs:
  accounting-service-logs:
  analytics-service-logs:
  portfolio-sme-service-logs:
  portfolio-institution-service-logs:
  app-mobile-service-logs:
  adha-ai-service-data:
  customer-service-logs:

networks:
  kiota-network:
    driver: bridge
